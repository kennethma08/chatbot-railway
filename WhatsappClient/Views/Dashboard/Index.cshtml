@model WhatsappClient.Models.DashboardDto
@{
    ViewData["Title"] = "Dashboard";
}

<div class="container-fluid px-3 px-md-4 py-3">

    <div class="dash-grid">
        <div class="area-kpis">
            <div class="row g-3">
                <div class="col-12 col-sm-6">
                    <div class="card kpi-card kpi-1 h-100 shadow-sm">
                        <div class="card-body d-flex align-items-center justify-content-between">
                            <div>
                                <h6 class="text-muted mb-1">Conversaciones</h6>
                                <h3 class="mb-0 fw-bold">@Model.TotalConversaciones</h3>
                            </div>
                            <i class="bx bx-message-rounded-dots kpi-icon"></i>
                        </div>
                    </div>
                </div>

                <div class="col-12 col-sm-6">
                    <div class="card kpi-card kpi-1 h-100 shadow-sm">
                        <div class="card-body d-flex align-items-center justify-content-between">
                            <div>
                                <h6 class="text-muted mb-1">Clientes nuevos (24h)</h6>
                                <h3 class="mb-0 fw-bold">@Model.ClientesNuevos</h3>
                            </div>
                            <i class="bx bx-user-plus kpi-icon"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="area-mensajes">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white">
                    <strong>Mensajes por mes</strong>
                </div>
                <div class="card-body">
                    <canvas id="chartMensajesMes" height="110"></canvas>
                </div>
            </div>
        </div>

        <div class="area-canales">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white d-flex align-items-center justify-content-between">
                    <strong>Canales</strong>
                    <span class="small text-muted">Solo WhatsApp</span>
                </div>
                <div class="card-body">
                    <canvas id="chartCanales" height="220"></canvas>
                </div>
                <div class="card-footer bg-white text-center small text-muted">
                    Total mensajes: @Model.TotalMensajes
                </div>
            </div>
        </div>

        <div class="area-actividad">
            <div class="card shadow-sm h-100">
                <div class="card-header bg-white d-flex align-items-center justify-content-between">
                    <strong>Actividad reciente</strong>
                </div>
                <div class="card-body">
                    @if (Model.Actividad?.Any() == true)
                    {
                        var first5 = Model.Actividad.Take(5).ToList();

                        <ul class="list-group list-group-flush small">
                            @foreach (var a in first5)
                            {
                                <li class="list-group-item px-0 d-flex justify-content-between align-items-center">
                                    <span>
                                        @if (a.Type == "new_client")
                                        {
                                            <i class="bx bx-user me-2"></i>
                                        }
                                        else if (a.Type == "conv_closed")
                                        {

                                            <i class="bx bx-check-circle me-2"></i>
                                        }
                                        @a.Title
                                    </span>
                                    <span class="text-muted">@a.When.ToLocalTime().ToString("dd/MM HH:mm")</span>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-muted">Sin actividad reciente.</div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link href="https://unpkg.com/boxicons@2.1.4/css/boxicons.min.css" rel="stylesheet" />

    <style>
        :root {
            --pastel-blue: #cfe8ff;
            --pastel-green: #d6f5e3;
            --pastel-yellow: #fff4c7;
            --pastel-pink: #ffd9e8;
            --pastel-purple: #e9dbff;
            --text-strong: #2b2b2b;
            /* Zebra morado para Actividad reciente */
            --zebra-odd: #eadcf1;
            --zebra-even: #fbf7ff;
            --zebra-hover: #ede2f6;
            --zebra-line: #eadcf4;
            /* Zebra redondeado + más separación del icono respecto al borde */
            --zebra-radius: 10px;
            --zebra-gap: 6px;
            /* Paleta y radio para gradiente animado (igual a analíticas) */
            --violet-900: #310353;
            --violet-600: #A860E0;
            --violet-500: #B57EDC;
            --violet-300: #CDABE6;
            --card-radius: 16px;
        }

        .dash-grid {
            display: grid;
            gap: 1rem;
        }

        @@media (min-width: 1200px) {
            .dash-grid {
                grid-template-columns: 2fr 1fr;
                grid-template-areas:
                    "kpis      canales"
                    "mensajes  canales"
                    "actividad actividad";
                align-items: stretch;
            }

            .area-kpis {
                grid-area: kpis;
            }

            .area-mensajes {
                grid-area: mensajes;
            }

            .area-canales {
                grid-area: canales;
            }

            .area-actividad {
                grid-area: actividad;
            }

            .area-canales > .card {
                height: 100%;
            }
        }

        /* KPIs con el mismo efecto de gradiente animado de analíticas */
        .kpi-card {
            position: relative;
            overflow: hidden;
            color: #fff;
            border: 0;
            border-radius: var(--card-radius);
        }

            .kpi-card .card-body {
                position: relative;
                z-index: 2;
                padding: 1.1rem 1.25rem;
            }

            .kpi-card::before {
                content: "";
                position: absolute;
                inset: 0;
                z-index: 1;
                background-size: 300% 100%;
                animation: shift 12s ease-in-out infinite;
                filter: saturate(1.15) contrast(1.05);
                opacity: .98;
            }
        /* Usamos el mismo gradiente que kpiMensajes (kpi-1) */
        .kpi-1::before {
            background-image: linear-gradient(120deg, var(--violet-900), var(--violet-600), var(--violet-900));
        }

        @@keyframes shift {
            0% {
                background-position: 0% 50%;
            }

            50% {
                background-position: 100% 50%;
            }

            100% {
                background-position: 0% 50%;
            }
        }

        /* Contraste y detalles dentro del KPI */
        .kpi-card h6 {
            color: rgba(255,255,255,.85) !important;
        }

        .kpi-card h3 {
            color: #fff;
        }

        .kpi-icon {
            font-size: 2rem;
            opacity: .85;
            color: rgba(255,255,255,.95);
        }

        /* Cards comunes */
        .area-mensajes > .card,
        .area-canales > .card,
        .area-actividad > .card {
            border-radius: var(--card-radius);
            border: 0;
            overflow: hidden;
        }

        /* Pasteles (ya no se usan para KPIs, quedan por si algo más los referencia) */
        .pastel-blue {
            background: var(--pastel-blue);
        }

        .pastel-green {
            background: var(--pastel-green);
        }

        .pastel-yellow {
            background: var(--pastel-yellow);
        }

        canvas {
            max-width: 100%;
        }

        .small {
            font-size: .875rem;
        }

        /* === Zebra morado: Actividad reciente === */
        .area-actividad .list-group-item {
            border: 0;
            border-bottom: 1px dashed var(--zebra-line);
            transition: background-color .15s ease;
        }

            .area-actividad .list-group-item:nth-of-type(odd) {
                background-color: var(--zebra-odd);
            }

            .area-actividad .list-group-item:nth-of-type(even) {
                background-color: var(--zebra-even);
            }

            .area-actividad .list-group-item:hover {
                background-color: var(--zebra-hover);
                border-radius: var(--zebra-radius);
            }

        /* Separamos visualmente los ítems para que el radio sea visible */
        .area-actividad .list-group-item {
            border-bottom: 0; /* quitamos el divisor punteado para que el radio se note */
            border-radius: var(--zebra-radius); /* bordes redondeados */
            margin-bottom: var(--zebra-gap); /* separación entre filas */
            padding-left: 16px !important; /* más espacio a la izquierda (sobrepasa .px-0) */
            padding-right: 12px !important;
        }

            /* Último ítem sin margen extra */
            .area-actividad .list-group-item:last-child {
                margin-bottom: 0;
            }

            /* Hover consistente con el radio */
            .area-actividad .list-group-item:hover {
                background-color: var(--zebra-hover);
                border-radius: var(--zebra-radius);
            }

            /* Opcional: asegura que el icono no pegue con el borde en layouts estrechos */
            .area-actividad .list-group-item .bx {
                margin-left: 2px;
                margin-right: .5rem; /* ya existe .me-2, pero esto refuerza el espacio en caso de override */
            }
    </style>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Paleta morada (barras)
        const VIOLET_SIDEBAR = '#1B042D';
        const VIOLET_HOVER   = '#310353';
        const VIOLET_600     = '#A860E0';
        const VIOLET_500     = '#B57EDC';
        const VIOLET_300     = '#CDABE6';
        const PALETTE        = [VIOLET_300, VIOLET_500, VIOLET_600, VIOLET_HOVER, VIOLET_SIDEBAR];

        // Morado del doughnut distinto al de las barras
        const VIOLET_DOUGHNUT       = '#7C3BB8'; // morado medio (no usado en las barras)
        const VIOLET_DOUGHNUT_HOVER = '#6932B0'; // hover un poco más oscuro

        const labelsMes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MensajesMesLabels));
        const valuesMes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.MensajesMesValues));

        (() => {
            const ctx = document.getElementById('chartMensajesMes').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labelsMes,
                    datasets: [{
                        label: 'Mensajes',
                        data: valuesMes,
                        backgroundColor: labelsMes.map((_, i) => PALETTE[i % PALETTE.length]),
                        borderWidth: 0
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: { beginAtZero: true, grid: { color: 'rgba(49,3,83,.08)' }, ticks: { precision: 0 } },
                        x: { grid: { display: false } }
                    },
                    plugins: { legend: { display: false } }
                }
            });
        })();

        (() => {
            const ctx = document.getElementById('chartCanales').getContext('2d');
            new Chart(ctx, {
                type: 'doughnut',
                data: {
                    labels: ['WhatsApp'],
                    datasets: [{
                        data: [@Model.TotalMensajes],
                        backgroundColor: [VIOLET_DOUGHNUT],
                        hoverBackgroundColor: [VIOLET_DOUGHNUT_HOVER],
                        borderColor: VIOLET_DOUGHNUT,
                        borderWidth: 2
                    }]
                },
                options: {
                    cutout: '62%',
                    plugins: { legend: { position: 'bottom' } }
                }
            });
        })();

        document.addEventListener('DOMContentLoaded', function () {
            var btn = document.getElementById('btnVerMas');
            var col = document.getElementById('actividadMas');
            if (btn && col) {
                col.addEventListener('shown.bs.collapse',  function(){ btn.querySelector('.label').textContent = 'Ver menos'; });
                col.addEventListener('hidden.bs.collapse', function(){ btn.querySelector('.label').textContent = 'Ver más';   });
            }
        });
    </script>
}
